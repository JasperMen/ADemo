apply plugin: 'com.android.application'

android {
    compileSdkVersion 23
    buildToolsVersion "23.0.1"

    defaultConfig {
        applicationId "com.cedarwood.ademo"
        minSdkVersion 9
        targetSdkVersion 23
        versionCode 1
        versionName "1.0"
    }

    signingConfigs {
        release {
            storeFile file('key/xmen.keystore')
            storePassword 'mwt@993265'
            keyAlias 'xmen_key'
            keyPassword 'mwt@993265'
        }
        debug {
            storeFile file('key/debug.keystore')
            storePassword 'debug@key'
            keyAlias 'debug_key'
            keyPassword 'debug@key'
        }
    }

    buildTypes {
        debug {
            minifyEnabled false
            signingConfig signingConfigs.debug
        }
        release {
            minifyEnabled true
            signingConfig signingConfigs.release
            proguardFiles getDefaultProguardFile('proguard-android.txt'), 'proguard-rules.pro'
        }
//        applicationVariants.all { variant ->
//            changeOutputApkName(variant, defaultConfig)
//        }
    }


    productFlavors {
        xiaomi{ }
        meizu{ }
    }

    productFlavors.all { flavor ->
        flavor.manifestPlaceholders = [ VERSION_NAME:name ]
    }


    lintOptions {
        checkReleaseBuilds false
        // Or, if you prefer, you can continue to check for errors in release builds,
        // but continue the build even when errors are found:
        abortOnError false
    }


    sourceSets {
        main {
            jniLibs.srcDirs = ['libs']
        }

    }

    packagingOptions {
        exclude 'META-INF/DEPENDENCIES.txt'
        exclude 'META-INF/LICENSE.txt'
        exclude 'META-INF/NOTICE.txt'
        exclude 'META-INF/NOTICE'
        exclude 'META-INF/LICENSE'
        exclude 'META-INF/DEPENDENCIES'
        exclude 'META-INF/notice.txt'
        exclude 'META-INF/license.txt'
        exclude 'META-INF/dependencies.txt'
        exclude 'META-INF/LGPL2.1'
    }


}

dependencies {
    compile fileTree(include: ['*.jar'], dir: 'libs')
    testCompile 'junit:junit:4.12'
    compile 'com.android.support:appcompat-v7:23.1.1'
    compile 'com.squareup.okhttp3:okhttp:3.1.2'
    compile 'com.android.support:design:23.+'
    compile 'com.google.android.gms:play-services-appindexing:8.1.0'
    compile 'com.nostra13.universalimageloader:universal-image-loader:1.9.5'
    compile 'de.greenrobot:eventbus:3.0.0-beta1'
    //    compile 'org.apache.httpcomponents:httpcore:4.3.2'
    //    compile 'org.apache.httpcomponents:httpmime:4.3.5'
    //    compile 'commons-lang:commons-lang:2.6'
    compile 'com.google.code.gson:gson:2.2.4'
    compile 'com.android.support:cardview-v7:23.1.1'
    compile 'com.github.bumptech.glide:glide:3.6.0'
    compile 'de.hdodenhof:circleimageview:1.3.0'
    compile 'com.nineoldandroids:library:2.4.0'
}

def changeOutputApkName(variant, defaultConfig) {
    if (variant.buildType.zipAlignEnabled) {
        // AUTO INCREAMENT VERSIONCODE
        def versionPropsFile = file('build.properties')
        if (versionPropsFile.canRead()) {
            def Properties versionProps = new Properties()
            versionProps.load(new FileInputStream(versionPropsFile))
            def buildNumber = versionProps['BUILD_NUMBER'].toInteger()
            println("USED BUILD_NUMBER=" + buildNumber)
            def file = variant.outputs[0].outputFile
            def fileName = file.name.replace(".apk", "_" + defaultConfig.versionName + "_" + defaultConfig.versionCode + "_" + buildNumber + ".apk")
            variant.outputs[0].outputFile = new File(file.parent, fileName)
        } else {
            throw new GradleException("Could not read build.properties!")
        }
    }
//    def file = variant.packageApplication.outputFile
//    def fileName = file.name.replace(".apk", ".data")
//    variant.packageApplication.outputFile = new File(file.parent, fileName)
}
